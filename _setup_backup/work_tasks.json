{
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: g++.exe build active file",
            "command": "C:\\msys64\\ucrt64\\bin\\g++.exe",
            "args": [                                                               // An array of arguments passed to the g++ command for compiling and linking the C++ program.
                "-fdiagnostics-color=always",                                       // Enables colored diagnostic messages (e.g., errors, warnings) in the terminal for better readability.
                "-std=c++17",                                                       // Specifies the C++ standard to use (C++17), ensuring the compiler uses features and rules from the C++17 standard.
                "-g",                                                               // Includes debugging information in the compiled output, allowing you to debug the program with tools like gdb.
                "${file}",                                                          // Refers to the currently active source file (e.g., main.cpp) in VS Code, specifying the file to compile.
                "${fileDirname}\\class\\CompareFiles.cpp",                          // Additional class implentation source files to compile in the class sub folder in current directory ...
                "${fileDirname}\\class\\FileHasher.cpp",                            // Additional class implentation source files to compile in the class sub folder in current directory ...
                "${fileDirname}\\class\\FilePropGatherer.cpp",                      // Additional class implentation source files to compile in the class sub folder in current directory ...
                "${fileDirname}\\class\\GetPaths.cpp",                              // Additional class implentation source files to compile in the class sub folder in current directory ...
                "-I", "C:\\dev_tools\\vcpkg\\installed\\x64-mingw-static\\include",      // Adds the specified directory to the include path, so the compiler can find header files for the miniz library
                "-L", "C:\\dev_tools\\vcpkg\\installed\\x64-mingw-static\\lib",          // Adds the specified directory to the library path, so the linker can find the miniz library files.
                "-lminiz",                                                          // Links against the miniz library, telling the linker to include the miniz library during the linking process.
                "-lbcrypt",                                                         // Links against the bcrypt library, instructing the linker to include the bcrypt library when creating the executable.
                "-o",                                                               // Specifies that the next argument will be the output file name for the compiled executable.
                "${fileDirname}\\${fileBasenameNoExtension}.exe",                   // Sets the output executable file name, using the directory of the source file (${fileDirname}) and the source file's name without extension (${fileBasenameNoExtension}), appending .exe.
                "-static"                                                           // Add this line to static compile
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        }
    ],
    "version": "2.0.0"
}